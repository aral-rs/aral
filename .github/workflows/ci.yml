name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches: [ "**" ]

env:
  RUST_LOG: debug
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: "1"
  RUSTFLAGS: "-D warnings"
  RUSTDOCFLAGS: "-D warnings"

jobs:
  required:
    name: Required
    needs:
      - test
      - fmt
      - doc
    runs-on: ubuntu-20.04
    steps:
      - name: Check results
        run: |
          [[ ${{ needs.test.result }} == 'success' ]] || exit 1;
          [[ ${{ needs.fmt.result }} == 'success' ]] || exit 1;
          [[ ${{ needs.doc.result }} == 'success' ]] || exit 1;
  
  fmt:
    name: Fmt
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Rustup toolchain add nighty
        run: rustup toolchain add nightly --component rustfmt

      - name: Cargo fmt
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: fmt
          args: --all -- --check
  
  doc:
    name: Doc
    strategy:
      fail-fast: false
      matrix:
        crate:
          - aral
          - aral-runtime-noop
          - aral-runtime-async-std
          - aral-runtime-tokio

    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Rustup toolchain add nighty
        run: rustup toolchain add nightly

      - name: Cargo generate lockfile
        uses: actions-rs/cargo@v1
        with:
          command: generate-lockfile

      - name: Setup cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: doc-${{ hashFiles('**/Cargo.lock') }}

      - name: Cargo doc
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: rustdoc
          args: -p ${{ matrix.crate }} --release --all-features -- --cfg docs_rs

  test:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
        features:
          - ""
          - "--features runtime-tokio --no-default-features"
          - "--features runtime-async-std  --no-default-features"
          - "--all-features"

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cargo generate lockfile
        uses: actions-rs/cargo@v1
        with:
          command: generate-lockfile

      - name: Setup cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ci-${{ matrix.os }}-${{ matrix.features }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --workspace --release ${{ matrix.features }}

      - name: Cargo test
        uses: actions-rs/cargo@v1
        if: matrix.features != ''
        with:
          command: test
          args: --workspace --release ${{ matrix.features }} -- --nocapture
